<?xml version="1.0"?>
<xsl:transform version="2.0" exclude-result-prefixes="n xs xsl" xpath-default-namespace="http://www.nemsis.org" xmlns="http://www.nemsis.org" xmlns:n="http://www.nemsis.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:function name="n:mapExpression">
		<xsl:param name="v2Element"/>
		<xsl:param name="elementMapping"/>
		<xsl:variable name="result">
			<!--The calling function will only send one instance of v2Element to this function, but the for-each allows us to change the context node so we can use "." notation to refer to v2Element.-->
			<xsl:for-each select="$v2Element">
				<xsl:element name="v3Replacement">
					<xsl:choose>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='Age' and normalize-space($elementMapping/v3TypeName)='Age'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='AlcoholDrugUseIndicators' and normalize-space($elementMapping/v3TypeName)='AlcoholDrugUseIndicators'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=3000 and ../E12_19=2995 and not(../E12_19=2985 or ../E12_19=2990)">
									<xsl:value-of select="3117003"/>
								</xsl:when>
								<xsl:when test=".=3000 and not(../E12_19=2995)">
									<xsl:value-of select="3117001"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='APGAR' and normalize-space($elementMapping/v3TypeName)='APGAR'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='BloodGlucoseLevel' and normalize-space($elementMapping/v3TypeName)='BloodGlucoseLevel'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='BodyTemperature' and normalize-space($elementMapping/v3TypeName)='BodyTemperature'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)">
									<xsl:value-of select="round(.*10) div 10"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='CauseOfInjury' and normalize-space($elementMapping/v3TypeName)='icd10CodeInjury'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=1885 and ../E10_02=2020">
									<xsl:value-of select="'Y04.1XXA'"/>
								</xsl:when>
								<xsl:when test=".=9500 and ../E10_02=2020">
									<xsl:value-of select="'Y08.81XA'"/>
								</xsl:when>
								<xsl:when test=".=9500 and ../E10_02=2025">
									<xsl:value-of select="'X83.0'"/>
								</xsl:when>
								<xsl:when test=".=9515 and ../E10_02=2020">
									<xsl:value-of select="'T65.93XA'"/>
								</xsl:when>
								<xsl:when test=".=9515 and ../E10_02=2025">
									<xsl:value-of select="'T65.92XA'"/>
								</xsl:when>
								<xsl:when test=".=9515 and ../E10_02=2030">
									<xsl:value-of select="'T65.91XA'"/>
								</xsl:when>
								<xsl:when test=".=9525 and ../E10_02=2020">
									<xsl:value-of select="'X92'"/>
								</xsl:when>
								<xsl:when test=".=9525 and ../E10_02=2025">
									<xsl:value-of select="'X71'"/>
								</xsl:when>
								<xsl:when test=".=9530 and ../E10_02=2025">
									<xsl:value-of select="'T50.902A'"/>
								</xsl:when>
								<xsl:when test=".=9530 and ../E10_02=2030">
									<xsl:value-of select="'T50.901A'"/>
								</xsl:when>
								<xsl:when test=".=9535 and ../E10_02=2025">
									<xsl:value-of select="'X83.1XXA'"/>
								</xsl:when>
								<xsl:when test=".=9540 and ../E10_02=2025">
									<xsl:value-of select="'X83.2XXA'"/>
								</xsl:when>
								<xsl:when test=".=9550 and ../E10_02=2020">
									<xsl:value-of select="'Y01.XXXA'"/>
								</xsl:when>
								<xsl:when test=".=9550 and ../E10_02=2025">
									<xsl:value-of select="'X80.XXXA'"/>
								</xsl:when>
								<xsl:when test=".=9555 and ../E10_02=2020">
									<xsl:value-of select="'X97.XXXA'"/>
								</xsl:when>
								<xsl:when test=".=9555 and ../E10_02=2025">
									<xsl:value-of select="'X76.XXXA'"/>
								</xsl:when>
								<xsl:when test=".=9585 and ../E10_02=2020">
									<xsl:value-of select="'T71.193A'"/>
								</xsl:when>
								<xsl:when test=".=9585 and ../E10_02=2025">
									<xsl:value-of select="'T71.192A'"/>
								</xsl:when>
								<xsl:when test=".=9585 and ../E10_02=2030">
									<xsl:value-of select="'T71.191A'"/>
								</xsl:when>
								<xsl:when test=".=9590 and ../E10_02=2020">
									<xsl:value-of select="'Y03'"/>
								</xsl:when>
								<xsl:when test=".=9590 and ../E10_02=2025">
									<xsl:value-of select="'X82'"/>
								</xsl:when>
								<xsl:when test=".=9595 and ../E10_02=2020">
									<xsl:value-of select="'Y03'"/>
								</xsl:when>
								<xsl:when test=".=9595 and ../E10_02=2025">
									<xsl:value-of select="'X82'"/>
								</xsl:when>
								<xsl:when test=".=9600 and ../E10_02=2020">
									<xsl:value-of select="'Y03'"/>
								</xsl:when>
								<xsl:when test=".=9600 and ../E10_02=2025">
									<xsl:value-of select="'X82'"/>
								</xsl:when>
								<xsl:when test=".=9610 and ../E10_02=2020">
									<xsl:value-of select="'Y03.0XXA'"/>
								</xsl:when>
								<xsl:when test=".=9610 and ../E10_02=2025">
									<xsl:value-of select="'X81'"/>
								</xsl:when>
								<xsl:when test=".=9625 and ../E10_02=2020">
									<xsl:value-of select="'T59.813A'"/>
								</xsl:when>
								<xsl:when test=".=9625 and ../E10_02=2025">
									<xsl:value-of select="'T59.812A'"/>
								</xsl:when>
								<xsl:when test=".=9625 and ../E10_02=2030">
									<xsl:value-of select="'T59.811A'"/>
								</xsl:when>
								<xsl:when test=".=9640 and ../E10_02=2020">
									<xsl:value-of select="'Y00.XXXA'"/>
								</xsl:when>
								<xsl:when test=".=9640 and ../E10_02=2025">
									<xsl:value-of select="'X79.XXXA'"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ChiefComplaintNarrative' and normalize-space($elementMapping/v3TypeName)='Complaint'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='CO2' and normalize-space($elementMapping/v3TypeName)='CO2'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='CO2' and normalize-space($elementMapping/v3TypeName)='PulseOximetry'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='Country' and normalize-space($elementMapping/v3TypeName)='ANSICountryCode'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="string-length(normalize-space(.))!=2">
									<xsl:value-of select="''"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="normalize-space(.)"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='County' and normalize-space($elementMapping/v3TypeName)='ANSICountyCode'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="substring(concat('_____', normalize-space(.)), string-length(normalize-space(.))+1, 5)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='CrewMemberID' and normalize-space($elementMapping/v3TypeName)='CrewMemberID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='CurrentMedicationDose' and normalize-space($elementMapping/v3TypeName)='CurrentMedicationDose'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DateOfBirth' and normalize-space($elementMapping/v3TypeName)='DateOfBirth'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DateTime' and normalize-space($elementMapping/v3TypeName)='DateTimeType'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".!=''">
									<xsl:value-of select="adjust-dateTime-to-timezone(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DBP' and normalize-space($elementMapping/v3TypeName)='DBP'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)&gt;0 and number(.)&lt;10">
									<xsl:value-of select="10"/>
								</xsl:when>
								<xsl:when test="number(.)">
									<xsl:value-of select="xs:integer(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DestinationMedicalRecordNumber' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DestinationTransferredToCode' and normalize-space($elementMapping/v3TypeName)='DestinationTransferredToCode'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DestinationTransferredToID' and normalize-space($elementMapping/v3TypeName)='DestinationTransferredToName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DeviceInvasivePressureMean' and normalize-space($elementMapping/v3TypeName)='MAP'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="../E21_19=5320 and .*7.5&lt;=500">
									<xsl:value-of select=".*7.5"/>
								</xsl:when>
								<xsl:when test="not(../E21_19=5320) and .&lt;=500">
									<xsl:value-of select="."/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="500"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DriversLicenseNumber' and normalize-space($elementMapping/v3TypeName)='DriversLicenseNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DurationOfChiefComplaint' and normalize-space($elementMapping/v3TypeName)='DurationComplaint'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='DurationOfSecondaryComplaint' and normalize-space($elementMapping/v3TypeName)='DurationComplaint'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ECGInterpretation' and normalize-space($elementMapping/v3TypeName)='ECGInterpretation'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ElectricMonitorRate' and normalize-space($elementMapping/v3TypeName)='HeartRate'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMDCardNumber' and normalize-space($elementMapping/v3TypeName)='DispatchPriority'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='A'">
									<xsl:value-of select="2305005"/>
								</xsl:when>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='B'">
									<xsl:value-of select="2305003"/>
								</xsl:when>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='C'">
									<xsl:value-of select="2305003"/>
								</xsl:when>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='D'">
									<xsl:value-of select="2305001"/>
								</xsl:when>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='E'">
									<xsl:value-of select="2305001"/>
								</xsl:when>
								<xsl:when test="upper-case(substring(normalize-space(.),string-length(normalize-space(.)),1))='O'">
									<xsl:value-of select="2305007"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMDCardNumber' and normalize-space($elementMapping/v3TypeName)='EMDCardNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMSAgencyNumber' and normalize-space($elementMapping/v3TypeName)='EMSAgencyNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMSAgencyNumber' and normalize-space($elementMapping/v3TypeName)='EMSAgencyStateID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMSUnitCallSign' and normalize-space($elementMapping/v3TypeName)='EMSUnitCallSign'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMSUnitNumber' and normalize-space($elementMapping/v3TypeName)='EMSVehicleNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="substring(.,25)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EMSUnitResponseNumber' and normalize-space($elementMapping/v3TypeName)='EMSResponseNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="string-length(.)&lt;3">
									<xsl:value-of select="substring(concat('___',.),string-length(.)+1,3)"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="."/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='EstimatedBodyWeight' and normalize-space($elementMapping/v3TypeName)='EstimatedBodyWeight'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='FireIncidentReportNumber' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='FirstName' and normalize-space($elementMapping/v3TypeName)='PersonFirstName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='GCSEye' and normalize-space($elementMapping/v3TypeName)='GlasgowComaScoreEyes'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)">
									<xsl:value-of select="xs:integer(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='GCSMotor' and normalize-space($elementMapping/v3TypeName)='GlasgowComaScoreMotor'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)">
									<xsl:value-of select="xs:integer(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='GCSVerbal' and normalize-space($elementMapping/v3TypeName)='GlasgowComaScoreVerbal'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)">
									<xsl:value-of select="xs:integer(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='GPSLocation' and normalize-space($elementMapping/v3TypeName)='GPSLocation'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="matches(concat(xs:decimal(@Lat),',',xs:decimal(@Long)),'^(\+|-)?(90(\.[0]{1,6})?|([1-8][0-9]|[0-9])(\.[0-9]{1,6})?),(\+|-)?(180(\.[0]{1,6})?|(1[0-7][0-9]|[1-9][0-9]|[0-9])(\.[0-9]{1,6})?)$')">
									<xsl:value-of select="concat(xs:decimal(@Lat),',',xs:decimal(@Long))"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='HeightOfFall' and normalize-space($elementMapping/v3TypeName)='HeightOfFall'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".&lt;=10000">
									<xsl:value-of select="."/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="10000"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ICD9CodeForConditionCode' and normalize-space($elementMapping/v3TypeName)='CustomResults'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ImmunizationDate' and normalize-space($elementMapping/v3TypeName)='Year'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='IncidentFacilityCode' and normalize-space($elementMapping/v3TypeName)='IncidentFacilityCode'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='IncidentNumber' and normalize-space($elementMapping/v3TypeName)='EMSIncidentNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="string-length(.)&lt;3">
									<xsl:value-of select="concat('_',.)"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="."/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='IncidentPatientDisposition' and normalize-space($elementMapping/v3TypeName)='IncidentPatientDisposition'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=4835 and ../../E05/E05_10!=''">
									<xsl:value-of select="4212023"/>
								</xsl:when>
								<xsl:when test=".=4820 and ../../E11/E11_03[.=2280 or .=2285 or .=2290] and ../../E05/E05_10!=''">
									<xsl:value-of select="4212017"/>
								</xsl:when>
								<xsl:when test=".=4820 and ../../E05/E05_10!=''">
									<xsl:value-of select="4212013"/>
								</xsl:when>
								<xsl:when test=".=4820 and ../../E11/E11_03[.=2280 or .=2285 or .=2290]">
									<xsl:value-of select="4212019"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='InsuranceCompanyID' and normalize-space($elementMapping/v3TypeName)='InsuranceCompanyID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='InsuranceGroupIDName' and normalize-space($elementMapping/v3TypeName)='InsuranceGroupIDName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='InsurancePolicyIDNumber' and normalize-space($elementMapping/v3TypeName)='InsurancePolicyIDNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='LastName' and normalize-space($elementMapping/v3TypeName)='PersonLastName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='LastName' and normalize-space($elementMapping/v3TypeName)='PersonName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='LawEnforcementCrashReportNumber' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='MedicationDosage' and normalize-space($elementMapping/v3TypeName)='MedicationDosage'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='MiddleInitialName' and normalize-space($elementMapping/v3TypeName)='PersonMiddleName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='Name' and normalize-space($elementMapping/v3TypeName)='EmployerName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='NumberOfProcedureAttempts' and normalize-space($elementMapping/v3TypeName)='NumberOfProcedureAttempts'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".&gt;=1 and .&lt;=10">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='OdometerReading' and normalize-space($elementMapping/v3TypeName)='EMSMileageOdometer'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='OtherEMSAgenciesAtScene' and normalize-space($elementMapping/v3TypeName)='OtherEMSAgenciesAtScene'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PacingRate' and normalize-space($elementMapping/v3TypeName)='PacingRate'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PainScale' and normalize-space($elementMapping/v3TypeName)='PainScale'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PatientCareReportNumber' and normalize-space($elementMapping/v3TypeName)='PatientCareReportNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PatientIDBandTagNumber' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PediatricTraumaScore' and normalize-space($elementMapping/v3TypeName)='CustomResults'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PositionOfPatientInSeat' and normalize-space($elementMapping/v3TypeName)='SeatRowLocation'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="../../E10_01=9600 and ../E10_06=1">
									<xsl:value-of select="2906001"/>
								</xsl:when>
								<xsl:when test=".=2155 and ../E10_06=3">
									<xsl:value-of select="2906023"/>
								</xsl:when>
								<xsl:when test=".=2160 and ../E10_06=1">
									<xsl:value-of select="2906005"/>
								</xsl:when>
								<xsl:when test=".=2160 and ../E10_06=2">
									<xsl:value-of select="2906017"/>
								</xsl:when>
								<xsl:when test=".=2160 and ../E10_06=3">
									<xsl:value-of select="2906025"/>
								</xsl:when>
								<xsl:when test="../../E10_01=9600 and ../E10_06=2">
									<xsl:value-of select="2906013"/>
								</xsl:when>
								<xsl:when test="../../E10_01=9600 and ../E10_06&gt;=3 and ../E10_06&lt;=49">
									<xsl:value-of select="2906021"/>
								</xsl:when>
								<xsl:when test="../E10_06=50">
									<xsl:value-of select="2906009"/>
								</xsl:when>
								<xsl:when test=".=2150 and ../E10_06=1">
									<xsl:value-of select="2906001"/>
								</xsl:when>
								<xsl:when test=".=2150 and ../E10_06=2">
									<xsl:value-of select="2906013"/>
								</xsl:when>
								<xsl:when test=".=2150 and ../E10_06=3">
									<xsl:value-of select="2906021"/>
								</xsl:when>
								<xsl:when test=".=2155 and ../E10_06=1">
									<xsl:value-of select="2906003"/>
								</xsl:when>
								<xsl:when test=".=2155 and ../E10_06=2">
									<xsl:value-of select="2906015"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PrimaryRollOfTheUnit' and normalize-space($elementMapping/v3TypeName)='PrimaryRoleOfUnit'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=75 and ../../E07/E07_34[.=1025 or .=1030]">
									<xsl:value-of select="2207001"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ProcedureAuthorzingPhysician' and normalize-space($elementMapping/v3TypeName)='PersonName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ProvidersPrimaryImpression' and normalize-space($elementMapping/v3TypeName)='ProvidersImpression'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=1695 and ../../E06/E06_14_0/E06_15=700">
									<xsl:value-of select="'P84'"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PulseOximetry' and normalize-space($elementMapping/v3TypeName)='PulseOximetry'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='PulseRate' and normalize-space($elementMapping/v3TypeName)='HeartRate'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ResearchField' and normalize-space($elementMapping/v3TypeName)='CustomResults'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ResearchTitle' and normalize-space($elementMapping/v3TypeName)='CustomTitle'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="normalize-space(.)='-10'">
									<xsl:value-of select="'Not Known'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-15'">
									<xsl:value-of select="'Not Reporting'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-20'">
									<xsl:value-of select="'Not Recorded'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-25'">
									<xsl:value-of select="'Not Applicable'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-5'">
									<xsl:value-of select="'Not Available'"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="."/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='RespiratoryRate' and normalize-space($elementMapping/v3TypeName)='RespiratoryRate'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='RespiratoryRate' and normalize-space($elementMapping/v3TypeName)='TraumaCenterCriteria'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)&lt;10">
									<xsl:value-of select="2903017"/>
								</xsl:when>
								<xsl:when test="number(.)&lt;20 and ../../E06/E06_14_0[(number(E06_14)&lt;2 and E06_15=715) or (number(E06_14)&lt;24 and E06_15=710)]">
									<xsl:value-of select="2903017"/>
								</xsl:when>
								<xsl:when test="number(.)&gt;29">
									<xsl:value-of select="2903017"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='RTS' and normalize-space($elementMapping/v3TypeName)='RTS'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='RunReportNarrative' and normalize-space($elementMapping/v3TypeName)='PCRNarrative'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SBP' and normalize-space($elementMapping/v3TypeName)='SBP'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SBP' and normalize-space($elementMapping/v3TypeName)='TraumaCenterCriteria'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)&lt;90">
									<xsl:value-of select="2903019"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SecondaryComplaintNarrative' and normalize-space($elementMapping/v3TypeName)='Complaint'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SendingFacilityRecordNumber' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ShockOrPacingEnergy' and normalize-space($elementMapping/v3TypeName)='ShockOrPacingEnergy'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SizeOfProcedureEquipment' and normalize-space($elementMapping/v3TypeName)='SizeOfProcedureEquipment'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SocialSecurityNumber' and normalize-space($elementMapping/v3TypeName)='SocialSecurityNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(replace(.,'\D',''))&lt;=999999999">
									<xsl:value-of select="replace(.,'\D','')"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SoftwareCreatedBy' and normalize-space($elementMapping/v3TypeName)='SoftwareCreator'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SoftwareName' and normalize-space($elementMapping/v3TypeName)='SoftwareName'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='SoftwareVersion' and normalize-space($elementMapping/v3TypeName)='SoftwareVersion'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='State' and normalize-space($elementMapping/v3TypeName)='ANSIStateCode'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="normalize-space(.)='-10'">
									<xsl:value-of select="'__'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-15'">
									<xsl:value-of select="'__'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-20'">
									<xsl:value-of select="'__'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-25'">
									<xsl:value-of select="'__'"/>
								</xsl:when>
								<xsl:when test="normalize-space(.)='-5'">
									<xsl:value-of select="'__'"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="substring(concat('__', .), string-length(.)+1, 2)"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='StreetAddress' and normalize-space($elementMapping/v3TypeName)='StreetAddress'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='TelephoneNumber' and normalize-space($elementMapping/v3TypeName)='PhoneNumber'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="matches(normalize-space(.),'^[2-9][0-9][0-9]-[2-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$')">
									<xsl:value-of select="normalize-space(.)"/>
								</xsl:when>
								<xsl:when test="matches(normalize-space(.),'^[2-9][0-9][0-9][2-9][0-9][0-9][0-9][0-9][0-9][0-9]$')">
									<xsl:value-of select="replace(normalize-space(.),'([2-9][0-9][0-9])([2-9][0-9][0-9])([0-9][0-9][0-9][0-9])','$1-$2-$3')"/>
								</xsl:when>
								<xsl:when test="matches(normalize-space(.),'^\([2-9][0-9][0-9]\) [2-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$')">
									<xsl:value-of select="replace(normalize-space(.),'\(([2-9][0-9][0-9])\) ([2-9][0-9][0-9]-[0-9][0-9][0-9][0-9])','$1-$2')"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='TotalGCS' and normalize-space($elementMapping/v3TypeName)='TotalGCS'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)&gt;=3">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='TotalGCS' and normalize-space($elementMapping/v3TypeName)='TraumaCenterCriteria'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="number(.)&gt;=3 and number(.)&lt;14">
									<xsl:value-of select="2903007"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='TotalNumberOfShocks' and normalize-space($elementMapping/v3TypeName)='TotalNumberOfShocks'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='TraumaRegistryID' and normalize-space($elementMapping/v3TypeName)='ExternalReportID'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='UseOfOccupantSafetyEquipment' and normalize-space($elementMapping/v3TypeName)='UseOfOccupantSafetyEquipment'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".=2185 and ../E10_08=2210">
									<xsl:value-of select="2907027"/>
								</xsl:when>
								<xsl:when test=".=2170 and ../../E06/E06_14_0[(number(E06_14)&lt;12 and E06_15=710) or E06_15=705 or E06_15=700]">
									<xsl:value-of select="2907009"/>
								</xsl:when>
								<xsl:when test=".=2170 and ../../E06/E06_14_0[(number(E06_14)&lt;2 and E06_15=715) or (number(E06_14)&lt;24 and E06_15=710)]">
									<xsl:value-of select="2907007"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='VehicleDispatchLocation' and normalize-space($elementMapping/v3TypeName)='VehicleDispatchLocation'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="string-length(.)&lt;2">
									<xsl:value-of select="concat('_',.)"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="otherwise">true</xsl:attribute>
									<xsl:value-of select="."/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='WaveformGraphic' and normalize-space($elementMapping/v3TypeName)='WaveformGraphic'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='Zip' and normalize-space($elementMapping/v3TypeName)='ZIP'&#xA;                    ">
							<xsl:choose>
								<xsl:when test="matches(normalize-space(.),'^[0-9]{5}|[0-9]{5}-[0-9]{4}|[0-9]{5}-[0-9]{5}|[A-Z][0-9][A-Z] [0-9][A-Z][0-9]$')">
									<xsl:value-of select="normalize-space(.)"/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="&#xA;                      normalize-space($elementMapping/v2TypeName)='ZoneNumber' and normalize-space($elementMapping/v3TypeName)='CustomResults'&#xA;                    ">
							<xsl:choose>
								<xsl:when test=".">
									<xsl:value-of select="."/>
								</xsl:when>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</xsl:element>
			</xsl:for-each>
		</xsl:variable>
		<xsl:if test="$result/v3Replacement!=''">
			<xsl:sequence select="$result"/>
		</xsl:if>
	</xsl:function>
</xsl:transform>
