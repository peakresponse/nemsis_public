<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:tns="http://ws.nemsis.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	version="1.0" targetNamespace="http://ws.nemsis.org/">
	<xs:element name="SubmitDataRequest" type="tns:NemsisV3WsSubmitDataRequest" />
	<xs:element name="SubmitDataResponse" type="tns:NemsisV3WsSubmitDataResponse" />
	<xs:element name="RetrieveStatusRequest" type="tns:NemsisV3WsRetrieveStatusRequest" />
	<xs:element name="RetrieveStatusResponse" type="tns:NemsisV3WsRetrieveStatusResponse" />
	<xs:element name="QueryLimitRequest" type="tns:NemsisV3WsQueryLimitRequest" />
	<xs:element name="QueryLimitResponse" type="tns:NemsisV3WsQueryLimitResponse" />
	<xs:element name="SearchRequest" type="tns:NemsisV3WsSearchRequest" />
	<xs:element name="SearchResponse" type="tns:NemsisV3WsSearchResponse" />
	<xs:simpleType name="SubmitResponseCode">
		<xs:union memberTypes="tns:CommonResponseCode tns:ResultPendingCode tns:SubmitDataProcessCodes" />
	</xs:simpleType>
	<xs:simpleType name="RetrieveResponseCode">
		<xs:union
			memberTypes="tns:CommonResponseCode tns:ResultPendingCode tns:SubmitDataProcessCodes tns:SearchErrorCodes tns:SearchSuccessCodes tns:RetrieveErrorCode">
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="SearchResponseCode">
		<xs:union memberTypes="tns:CommonResponseCode tns:ResultPendingCode tns:SearchErrorCodes tns:SearchSuccessCodes" />
	</xs:simpleType>
	<xs:simpleType name="QueryLimitResponseCode">
		<xs:union memberTypes="tns:PrivilegeErrorCodes tns:QueryLimitCodes" />
	</xs:simpleType>
	<xs:simpleType name="CommonResponseCode">
		<xs:union memberTypes="tns:PrivilegeErrorCodes tns:ParameterErrorCodes tns:CustomErrorCodes tns:CustomSuccessCodes" />
	</xs:simpleType>
	<xs:simpleType name="PrivilegeErrorCodes">
		<xs:annotation>
			<xs:documentation>Error codes of authentication/authorization for an attempted web service operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="-3">
				<xs:annotation>
					<xs:documentation>Permission denied to the client for that organization</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-2">
				<xs:annotation>
					<xs:documentation>Permission denied to the client for the operation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-1">
				<xs:annotation>
					<xs:documentation>Invalid username and/or password</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ParameterErrorCodes">
		<xs:annotation>
			<xs:documentation>Generic error codes for an attempted web service operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="-4">
				<xs:annotation>
					<xs:documentation>Invalid parameter value</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-5">
				<xs:annotation>
					<xs:documentation>Invalid parameter combination</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ResultPendingCode">
		<xs:annotation>
			<xs:documentation>Code to indicate the process is not finished on the server for an attempted web service operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="0">
				<xs:annotation>
					<xs:documentation>The expected data processing is not yet complete</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SubmitDataProcessCodes">
		<xs:annotation>
			<xs:documentation>Codes to describe return codes for an attempted data submission web service operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="-11">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because the same file is already on the server</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-12">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because of failing XML validation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-13">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because of [FATAL] level Schematron rule violation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-14">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because of [ERROR] level Schematron rule violation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-15">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because of critical ETL rule violation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-16">
				<xs:annotation>
					<xs:documentation>Failed import of a file, because of critical Business Intelligence rule violation</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="1">
				<xs:annotation>
					<xs:documentation>Successful import of a file</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="2">
				<xs:annotation>
					<xs:documentation>Successful import of a file, with [ERROR] level Schematron rule violation reported</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="3">
				<xs:annotation>
					<xs:documentation>Successful import of a file, with [WARNING] level Schematron rule violation reported</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="4">
				<xs:annotation>
					<xs:documentation>Successful import of a file, with ETL rule warning</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="5">
				<xs:annotation>
					<xs:documentation>Successful import of a file, with Business Intelligence warning</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RetrieveErrorCode">
		<xs:annotation>
			<xs:documentation>Code to indicate the error status for RetrieveStatus operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="-40">
				<xs:annotation>
					<xs:documentation>Status for the requested requestHandle is not available: it could be expired, or not in correct format, or never exist, or for
						any other whatever reason.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-41">
				<xs:annotation>
					<xs:documentation>Status for the requested requestHandle is not available since it expires already</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-42">
				<xs:annotation>
					<xs:documentation>Invalid value of requestHandle (for example, not formatted properly)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-43">
				<xs:annotation>
					<xs:documentation>Never-used value of requestHandle</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="QueryLimitCodes">
		<xs:annotation>
			<xs:documentation>Code to indicate the status for QueryLimit operation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="51">
				<xs:annotation>
					<xs:documentation>Successful operation of QueryLimit</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-50">
				<xs:annotation>
					<xs:documentation>Server is too busy. The client should query later</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="-51">
				<xs:annotation>
					<xs:documentation>Failed operation of QueryLimit</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CustomErrorCodes">
		<xs:annotation>
			<xs:documentation>State or Vendor specific error returning code for web service request. It should be smaller than -100</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="-100" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CustomSuccessCodes">
		<xs:annotation>
			<xs:documentation>State or Vendor specific success returning code for web service request. It should be greater than 100</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:minExclusive value="100" />
		</xs:restriction>
	</xs:simpleType>
	<xs:group name="PrivilegeGroup">
		<xs:sequence>
			<xs:element name="username">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
						<xs:maxLength value="100" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="password">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
						<xs:maxLength value="250" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="organization">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1" />
						<xs:maxLength value="100" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="NemsisV3WsRetrieveStatusRequest">
		<xs:sequence>
			<xs:group ref="tns:PrivilegeGroup" />
			<xs:element name="requestType" type="xs:string" fixed="RetrieveStatus" />
			<xs:element name="requestHandle" type="xs:string" />
			<xs:element name="originalRequestType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> This element indicates the original request type: it could be either "SubmitData" or "Search", or some custom request
						operation. When the server assigns unique identifiers (requestHandle) for all operations, this element is not necessary.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalInfo" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsRetrieveStatusResponse">
		<xs:sequence>
			<xs:element name="requestType" type="xs:string" fixed="RetrieveStatus" />
			<xs:element name="statusCode" type="tns:RetrieveResponseCode" />
			<xs:element name="requestHandle" type="xs:string">
				<xs:annotation>
					<xs:documentation> This requestHandle should echo the submit value of "requestHandle" in RetrieveStatus operation. The server doesn't need to
						create a new handle for asynchronous request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="originalRequestType" type="xs:string" minOccurs="0" />
			<xs:element name="RetrieveResult" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="RetrieveSearchResult" type="tns:SearchResult" />
						<xs:element name="RetrieveSubmitStatus" type="tns:SubmitDataReport" />
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsQueryLimitRequest">
		<xs:sequence>
			<xs:group ref="tns:PrivilegeGroup" />
			<xs:element name="requestType" type="xs:string" fixed="QueryLimit" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsQueryLimitResponse">
		<xs:sequence>
			<xs:element name="requestType" type="xs:string" fixed="QueryLimit" />
			<xs:element name="limt" type="xs:integer">
				<xs:annotation>
					<xs:documentation> The Web Service data submission size limit, expressed in KB (1024 Bytes). This should only apply to data payload, not on the
						whole SOAP message. Positive value indicates success and negative value indicates error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="statusCode" type="tns:QueryLimitResponseCode" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsSubmitDataRequest">
		<xs:sequence>
			<xs:group ref="tns:PrivilegeGroup" />
			<xs:element name="requestType" type="xs:string" fixed="SubmitData" />
			<xs:element name="SubmitPayload" type="tns:DataPayload" />
			<xs:element name="requestDataSchema" type="tns:DataSchema" />
			<xs:element name="schemaVersion" type="xs:string" />
			<xs:element name="additionalInfo" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsSubmitDataResponse">
		<xs:sequence>
			<xs:element name="requestType" type="xs:string" fixed="SubmitData" />
			<xs:element name="requestHandle" type="xs:string" />
			<xs:element name="statusCode" type="tns:SubmitResponseCode" />
			<xs:element name="reports" type="tns:SubmitDataReport" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SubmitDataReport">
		<xs:sequence>
			<xs:element name="XmlValidationErrorReport" type="tns:XmlValidationErrorReport" />
			<xs:element name="SchematronReport" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CompleteSchematronReport" type="tns:CompleteSchematronReport" minOccurs="0" maxOccurs="unbounded" />
						<xs:element name="DigestedSchematronReport" type="tns:DigestedSchematronReport" minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CustomReport" type="tns:SingleCustomReport" maxOccurs="unbounded" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataPayload">
		<xs:annotation>
			<xs:documentation>For data submission and search result, DataPayload is used to include a "file" or root element of XML document.
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PayloadOfString" type="tns:PayloadOfString" />
			<xs:element name="PayloadOfBinary" type="tns:PayloadOfBinary" />
			<xs:element name="PayloadOfXmlElement" type="tns:PayloadOfXmlElement" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="PayloadOfString">
		<xs:sequence>
			<xs:element name="encoding" type="xs:string" fixed="text/xml" />
			<xs:element name="payload" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PayloadOfBinary">
		<xs:sequence>
			<xs:element name="encoding" type="xs:string" fixed="base64Binary" />
			<xs:element name="compressed" type="xs:boolean" default="true" />
			<xs:element name="payload" type="xs:base64Binary" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PayloadOfXmlElement">
		<xs:sequence>
			<xs:element name="encoding" type="xs:string" fixed="xml" />
			<xs:any processContents="lax" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DataSchema">
		<xs:union memberTypes="tns:NemsisDataSchema tns:GeneralDataSchema" />
	</xs:simpleType>
	<xs:simpleType name="GeneralDataSchema">
		<xs:annotation>
			<xs:documentation>A string to indicate the schema for the embedded data, not limit to NEMSIS</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="70" />
			<xs:maxInclusive value="90" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NemsisDataSchema">
		<xs:annotation>
			<xs:documentation>A string to indicate the NEMSIS schema for the embedded data</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:enumeration value="61">
				<xs:annotation>
					<xs:documentation>NEMSIS EMS Schema</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="62">
				<xs:annotation>
					<xs:documentation>NEMSIS Demographics Schema</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="63">
				<xs:annotation>
					<xs:documentation>NEMSIS CAD Schema</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="64">
				<xs:annotation>
					<xs:documentation>NEMSIS Medical Device Schema</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="SingleCustomReport">
		<xs:annotation>
			<xs:documentation>The element contains a list of customized reports</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReportType" type="xs:string">
				<xs:annotation>
					<xs:documentation>Describe the customized report type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomReport" maxOccurs="unbounded" minOccurs="0" type="tns:DataPayload" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompleteSchematronReport">
		<xs:annotation>
			<xs:documentation>The element contains a list of full Schematron validation reports</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CompleteReport" maxOccurs="unbounded" minOccurs="0" type="tns:DataPayload" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DigestedSchematronReport">
		<xs:annotation>
			<xs:documentation>This element contains a list of digested Schematron validation reports</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SchematronRuleDefinition" type="tns:SchematronRuleDefinition" />
			<xs:element name="ErrorMessage" type="xs:string" />
			<xs:element maxOccurs="unbounded" name="ErrorElement" type="tns:XmlElementInfo" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SchematronRuleDefinition">
		<xs:annotation>
			<xs:documentation>Metadata for a Schematron rule. Some information might be redudant or overlap.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RuleFile" minOccurs="0" type="xs:string" />
			<xs:element name="RuleFileVersion" minOccurs="0" type="xs:string" />
			<xs:element name="RuleID" type="xs:string" />
			<xs:element name="RuleVersion" minOccurs="0" type="xs:string" />
			<xs:element name="RuleDesc" minOccurs="0" type="xs:string" />
			<xs:element name="Location" minOccurs="0" type="xs:string" />
			<xs:element name="RuleContext" minOccurs="0" type="xs:string" />
			<xs:element name="RuleSyntax" minOccurs="0" type="xs:string" />
			<xs:element name="AssertCondition" minOccurs="0" type="xs:string" />
			<xs:element name="Severity" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlValidationErrorReport">
		<xs:annotation>
			<xs:documentation>There are several ways to report XML validation Errors: 1. list every violating elements; 2. aggregate elements with same error
				type, then list all error types; 3. only report one or some errors
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TotalErrorCount" type="xs:integer">
				<xs:annotation>
					<xs:documentation>The count of total validation error found by validator. It is not necessary same as the count of errors inlcuded in this
						report. Value of "zero" indicates no XML validation error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XmlError" type="tns:XmlValidationError" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlValidationError">
		<xs:sequence>
			<xs:element name="desc" type="xs:string">
				<xs:annotation>
					<xs:documentation>XML Validation Error Message</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="XmlGeneralErrorList" type="tns:XmlGeneralErrorList" />
				<xs:element name="FailedElementList" type="tns:XmlElementList" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlGeneralErrorList">
		<xs:sequence>
			<xs:element name="ErrorMessage" type="xs:string" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlElementList">
		<xs:sequence>
			<xs:element name="XmlElementInfo" maxOccurs="unbounded" type="tns:XmlElementInfo" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlElementInfo">
		<xs:annotation>
			<xs:documentation />
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ElementName" type="xs:string" />
			<xs:choice>
				<xs:element name="ElementLocation" type="tns:XmlElementLocation" />
				<xs:element name="ElementLocationUnknown" type="xs:string" fixed="Yes" />
			</xs:choice>
			<xs:element name="value" minOccurs="0" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XmlElementLocation">
		<xs:annotation>
			<xs:documentation>To locate an XML element, there are three ways: 1. find the line and column number in the XML file. 2. find the XPATH location in
				parsed DOM tree. 3. by search the file using XML element name and its value. It is not required to report line/column AND xpath at the same time.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="line" minOccurs="0" type="xs:integer" />
			<xs:element name="column" minOccurs="0" type="xs:integer" />
			<xs:element name="XPATHlocation" minOccurs="0" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<!-- The latest section is for search function. The definitions are modified based on Utah Polaris Porject's Web Service WSDL. The original WSDL could
		be found at http://http://health.utah.gov/ems/web_services/PolarisWS.wsdl. Please note that this is designed -->
	<!-- To Do....... -->
	<xs:complexType name="NemsisV3WsSearchRequest">
		<xs:sequence>
			<xs:element name="username" type="xs:string" />
			<xs:element name="password" type="xs:string" />
			<xs:element name="organization" type="xs:string" />
			<xs:element name="requestType" type="xs:string" fixed="Search" />
			<xs:element name="searchCriteria" type="tns:SearchParameters" />
			<xs:element name="returnElementList" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>To specify which elements should be inlcuded in the search result</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalInfo" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NemsisV3WsSearchResponse">
		<xs:sequence>
			<xs:element name="requestType" type="xs:string" fixed="Search" />
			<xs:element name="requestHandle" type="xs:string" />
			<xs:element name="statusCode" type="tns:SearchResponseCode" />
			<xs:element name="SearchResult" type="tns:SearchResult" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SearchResult">
		<xs:sequence>
			<xs:element name="TotalRecordCount" type="xs:integer" />
			<xs:element name="IncludedRecordCount" type="xs:integer" />
			<xs:element name="DataPayload" type="tns:DataPayload" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SearchErrorCodes">
		<xs:annotation>
			<xs:documentation>Specific error returning codes for web service SEARCH operation. The possible values are from -81 to -99. This is open to
				discussion.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:maxInclusive value="-81" />
			<xs:minInclusive value="-99" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SearchSuccessCodes">
		<xs:annotation>
			<xs:documentation>Specific success returning codes for web service SEARCH operation. The possible values are from 81 to 99. This is open to
				discussion.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer">
			<xs:maxInclusive value="99" />
			<xs:minInclusive value="81" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AndOr">
		<xs:annotation>
			<xs:documentation>Used for the advanced search to determine the logic between the current set and the following set.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="AND">
				<xs:annotation>
					<xs:documentation>The next field must evaluate as true.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OR">
				<xs:annotation>
					<xs:documentation>If either this or the next field is true, the result is true.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Operator">
		<xs:annotation>
			<xs:documentation>The symbol for the operation in advanced search</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="eq">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is equal to the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ne">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is not equal to the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gt">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is greater than the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ge">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is greater than or equal to the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lt">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is less than the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="le">
				<xs:annotation>
					<xs:documentation>The corresponding value in the database is less than or equal to the input provided.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DateTimeRange">
		<xs:sequence>
			<xs:element name="lowerbound" type="xs:dateTime" />
			<xs:element name="upperbound" type="xs:dateTime" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DateRange">
		<xs:sequence>
			<xs:element name="lowerbound" type="xs:date" />
			<xs:element name="upperbound" type="xs:date" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AgeValues">
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0" />
			<xs:maxInclusive value="120" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AgeSpec">
		<xs:sequence>
			<xs:element default="0" maxOccurs="1" minOccurs="0" name="lowerAgeBound" type="tns:AgeValues" />
			<xs:element default="120" maxOccurs="1" minOccurs="0" name="upperAgeBound" type="tns:AgeValues" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SearchParameters">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_erecord_01" type="xs:string">
				<xs:annotation>
					<xs:documentation>Patient Care Report Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="CreatedDateRange" type="xs:date" />
			<xs:element maxOccurs="1" minOccurs="0" name="ModifiedDateRange" type="xs:date" />
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eResponse_01" type="xs:string">
				<xs:annotation>
					<xs:documentation>EMS Agency Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eResponse_03" type="xs:string">
				<xs:annotation>
					<xs:documentation>Incident Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eResponse_14" type="xs:string">
				<xs:annotation>
					<xs:documentation>EMS Unit Call Sign</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_ePatient_01" type="xs:string">
				<xs:annotation>
					<xs:documentation>EMS Patient ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_ePatient_02" type="xs:string">
				<xs:annotation>
					<xs:documentation>EMS Patient Last Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_ePatient_03" type="xs:string">
				<xs:annotation>
					<xs:documentation>EMS Patient First Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eScene_14" type="xs:string">
				<xs:annotation>
					<xs:documentation>Incident Street Address</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eScene_16" type="xs:string">
				<xs:annotation>
					<xs:documentation>Incident City</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eScene_17" type="xs:string">
				<xs:annotation>
					<xs:documentation>Incident State</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="NEMSIS_eScene_20" type="xs:string">
				<xs:annotation>
					<xs:documentation>Incident County</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="UnitNotifiedDateRange" type="tns:DateRange" />
			<xs:element maxOccurs="1" minOccurs="0" name="BirthDateRange" type="tns:DateRange" />
			<xs:element maxOccurs="1" minOccurs="0" name="PatientAge" type="tns:AgeSpec" />
			<xs:element maxOccurs="unbounded" minOccurs="0" name="advancedSearch" type="tns:AdvancedSearch" />
			<xs:element maxOccurs="1" minOccurs="0" name="Complete" type="xs:boolean" />
			<xs:element maxOccurs="1" minOccurs="0" name="Modified" type="xs:boolean" />
			<xs:element maxOccurs="1" minOccurs="0" name="ExtendedSearch" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdvancedSearch">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="FieldName" type="xs:string" />
			<xs:element maxOccurs="1" minOccurs="1" name="Operator" type="tns:Operator" />
			<xs:element maxOccurs="1" minOccurs="1" name="FieldValue" type="xs:string" />
			<xs:element maxOccurs="1" minOccurs="1" name="AndOr" type="tns:AndOr" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>